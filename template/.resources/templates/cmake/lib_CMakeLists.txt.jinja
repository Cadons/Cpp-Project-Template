# Include common cmake scripts
include(${CMAKE_CURRENT_SOURCE_DIR}/.cmake/sources.cmake)

show_module_info(${CMAKE_CURRENT_LIST_DIR}/package.json)
# Configure build output directories for the target
configure_build({{ target_name }})

# Create executable target
add_library({{ target_name }}  {{"${" + sources + "}"}} {{"${" + headers + "}"}} {{"${" + resources + "}"}})

# Include headers directory
target_include_directories({{ target_name }}
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
        $<INSTALL_INTERFACE:include>
    PRIVATE
        ${CMAKE_CURRENT_SOURCE_DIR}/include/{{ target_name }}
)
get_name(${CMAKE_CURRENT_LIST_DIR}/package.json PROGRAM_NAME)
get_version(${CMAKE_CURRENT_LIST_DIR}/package.json PROGRAM_VERSION)
configure_file(
        ${CMAKE_CURRENT_LIST_DIR}/config.h.in
        ${CMAKE_CURRENT_LIST_DIR}/include/{{target_name}}/config.h
)
# Link libraries
#target_link_libraries({{ target_name }} PRIVATE)
set_target_properties({{ target_name }} PROPERTIES FOLDER "Libraries")

# Enable testing if tests exist
include(CTest)
if(BUILD_TESTING)
    add_subdirectory(test/)
endif()
# Install target
configure_install({{ target_name }})